/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 19 09:13:18 GMT 2017
 */

package com.squareup.javapoet;

import org.junit.Test;
import static org.junit.Assert.*;
import com.squareup.javapoet.LineWrapper;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LineWrapper_ESTest extends LineWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("%");
      LineWrapper lineWrapper0 = new LineWrapper(mockPrintWriter0, "%", 1);
      lineWrapper0.close();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(5);
      LineWrapper lineWrapper0 = new LineWrapper(charArrayWriter0, "g", 10);
      lineWrapper0.wrappingSpace(5);
      lineWrapper0.append("46@;wIT_|LsCBo");
      lineWrapper0.append("out == null");
      assertEquals("\nggggg46@;wIT_|LsCBoout == null", charArrayWriter0.toString());
      assertEquals(31, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      LineWrapper lineWrapper0 = new LineWrapper(mockPrintStream0, "", 1);
      lineWrapper0.wrappingSpace(2440);
      lineWrapper0.append("");
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(5);
      LineWrapper lineWrapper0 = new LineWrapper(charArrayWriter0, "g", 10);
      lineWrapper0.wrappingSpace(5);
      lineWrapper0.append("g");
      assertEquals(0, charArrayWriter0.size());
      assertEquals("", charArrayWriter0.toString());
  }
}
